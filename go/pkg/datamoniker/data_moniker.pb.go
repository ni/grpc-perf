//---------------------------------------------------------------------
//---------------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: data_moniker.proto

//---------------------------------------------------------------------
//---------------------------------------------------------------------

package datamoniker

import (
	any1 "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SidebandStrategy int32

const (
	SidebandStrategy_UNKNOWN                       SidebandStrategy = 0
	SidebandStrategy_GRPC                          SidebandStrategy = 1
	SidebandStrategy_SHARED_MEMORY                 SidebandStrategy = 2
	SidebandStrategy_DOUBLE_BUFFERED_SHARED_MEMORY SidebandStrategy = 3
	SidebandStrategy_SOCKETS                       SidebandStrategy = 4
	SidebandStrategy_SOCKETS_LOW_LATENCY           SidebandStrategy = 5
	SidebandStrategy_HYPERVISOR_SOCKETS            SidebandStrategy = 6
	SidebandStrategy_RDMA                          SidebandStrategy = 7
	SidebandStrategy_RDMA_LOW_LATENCY              SidebandStrategy = 8
)

// Enum value maps for SidebandStrategy.
var (
	SidebandStrategy_name = map[int32]string{
		0: "UNKNOWN",
		1: "GRPC",
		2: "SHARED_MEMORY",
		3: "DOUBLE_BUFFERED_SHARED_MEMORY",
		4: "SOCKETS",
		5: "SOCKETS_LOW_LATENCY",
		6: "HYPERVISOR_SOCKETS",
		7: "RDMA",
		8: "RDMA_LOW_LATENCY",
	}
	SidebandStrategy_value = map[string]int32{
		"UNKNOWN":                       0,
		"GRPC":                          1,
		"SHARED_MEMORY":                 2,
		"DOUBLE_BUFFERED_SHARED_MEMORY": 3,
		"SOCKETS":                       4,
		"SOCKETS_LOW_LATENCY":           5,
		"HYPERVISOR_SOCKETS":            6,
		"RDMA":                          7,
		"RDMA_LOW_LATENCY":              8,
	}
)

func (x SidebandStrategy) Enum() *SidebandStrategy {
	p := new(SidebandStrategy)
	*p = x
	return p
}

func (x SidebandStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SidebandStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_data_moniker_proto_enumTypes[0].Descriptor()
}

func (SidebandStrategy) Type() protoreflect.EnumType {
	return &file_data_moniker_proto_enumTypes[0]
}

func (x SidebandStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SidebandStrategy.Descriptor instead.
func (SidebandStrategy) EnumDescriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{0}
}

type BeginMonikerSidebandStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy SidebandStrategy `protobuf:"varint,1,opt,name=strategy,proto3,enum=ni.data_monikers.SidebandStrategy" json:"strategy,omitempty"`
	Monikers *MonikerList     `protobuf:"bytes,2,opt,name=monikers,proto3" json:"monikers,omitempty"`
}

func (x *BeginMonikerSidebandStreamRequest) Reset() {
	*x = BeginMonikerSidebandStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginMonikerSidebandStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginMonikerSidebandStreamRequest) ProtoMessage() {}

func (x *BeginMonikerSidebandStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginMonikerSidebandStreamRequest.ProtoReflect.Descriptor instead.
func (*BeginMonikerSidebandStreamRequest) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{0}
}

func (x *BeginMonikerSidebandStreamRequest) GetStrategy() SidebandStrategy {
	if x != nil {
		return x.Strategy
	}
	return SidebandStrategy_UNKNOWN
}

func (x *BeginMonikerSidebandStreamRequest) GetMonikers() *MonikerList {
	if x != nil {
		return x.Monikers
	}
	return nil
}

type BeginMonikerSidebandStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy           SidebandStrategy `protobuf:"varint,1,opt,name=strategy,proto3,enum=ni.data_monikers.SidebandStrategy" json:"strategy,omitempty"`
	ConnectionUrl      string           `protobuf:"bytes,2,opt,name=connection_url,json=connectionUrl,proto3" json:"connection_url,omitempty"`
	SidebandIdentifier string           `protobuf:"bytes,3,opt,name=sideband_identifier,json=sidebandIdentifier,proto3" json:"sideband_identifier,omitempty"`
	BufferSize         int64            `protobuf:"zigzag64,4,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
}

func (x *BeginMonikerSidebandStreamResponse) Reset() {
	*x = BeginMonikerSidebandStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginMonikerSidebandStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginMonikerSidebandStreamResponse) ProtoMessage() {}

func (x *BeginMonikerSidebandStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginMonikerSidebandStreamResponse.ProtoReflect.Descriptor instead.
func (*BeginMonikerSidebandStreamResponse) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{1}
}

func (x *BeginMonikerSidebandStreamResponse) GetStrategy() SidebandStrategy {
	if x != nil {
		return x.Strategy
	}
	return SidebandStrategy_UNKNOWN
}

func (x *BeginMonikerSidebandStreamResponse) GetConnectionUrl() string {
	if x != nil {
		return x.ConnectionUrl
	}
	return ""
}

func (x *BeginMonikerSidebandStreamResponse) GetSidebandIdentifier() string {
	if x != nil {
		return x.SidebandIdentifier
	}
	return ""
}

func (x *BeginMonikerSidebandStreamResponse) GetBufferSize() int64 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

type Moniker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceLocation string `protobuf:"bytes,1,opt,name=service_location,json=serviceLocation,proto3" json:"service_location,omitempty"`
	DataSource      string `protobuf:"bytes,2,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	DataInstance    int64  `protobuf:"varint,3,opt,name=data_instance,json=dataInstance,proto3" json:"data_instance,omitempty"`
}

func (x *Moniker) Reset() {
	*x = Moniker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Moniker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Moniker) ProtoMessage() {}

func (x *Moniker) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Moniker.ProtoReflect.Descriptor instead.
func (*Moniker) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{2}
}

func (x *Moniker) GetServiceLocation() string {
	if x != nil {
		return x.ServiceLocation
	}
	return ""
}

func (x *Moniker) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

func (x *Moniker) GetDataInstance() int64 {
	if x != nil {
		return x.DataInstance
	}
	return 0
}

type MonikerWriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to WriteData:
	//	*MonikerWriteRequest_Monikers
	//	*MonikerWriteRequest_Data
	WriteData isMonikerWriteRequest_WriteData `protobuf_oneof:"write_data"`
}

func (x *MonikerWriteRequest) Reset() {
	*x = MonikerWriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonikerWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonikerWriteRequest) ProtoMessage() {}

func (x *MonikerWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonikerWriteRequest.ProtoReflect.Descriptor instead.
func (*MonikerWriteRequest) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{3}
}

func (m *MonikerWriteRequest) GetWriteData() isMonikerWriteRequest_WriteData {
	if m != nil {
		return m.WriteData
	}
	return nil
}

func (x *MonikerWriteRequest) GetMonikers() *MonikerList {
	if x, ok := x.GetWriteData().(*MonikerWriteRequest_Monikers); ok {
		return x.Monikers
	}
	return nil
}

func (x *MonikerWriteRequest) GetData() *MonikerValues {
	if x, ok := x.GetWriteData().(*MonikerWriteRequest_Data); ok {
		return x.Data
	}
	return nil
}

type isMonikerWriteRequest_WriteData interface {
	isMonikerWriteRequest_WriteData()
}

type MonikerWriteRequest_Monikers struct {
	Monikers *MonikerList `protobuf:"bytes,1,opt,name=monikers,proto3,oneof"`
}

type MonikerWriteRequest_Data struct {
	Data *MonikerValues `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*MonikerWriteRequest_Monikers) isMonikerWriteRequest_WriteData() {}

func (*MonikerWriteRequest_Data) isMonikerWriteRequest_WriteData() {}

type MonikerReadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *MonikerValues `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MonikerReadResult) Reset() {
	*x = MonikerReadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonikerReadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonikerReadResult) ProtoMessage() {}

func (x *MonikerReadResult) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonikerReadResult.ProtoReflect.Descriptor instead.
func (*MonikerReadResult) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{4}
}

func (x *MonikerReadResult) GetData() *MonikerValues {
	if x != nil {
		return x.Data
	}
	return nil
}

type MonikerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInitialWrite bool       `protobuf:"varint,1,opt,name=is_initial_write,json=isInitialWrite,proto3" json:"is_initial_write,omitempty"`
	ReadMonikers   []*Moniker `protobuf:"bytes,2,rep,name=read_monikers,json=readMonikers,proto3" json:"read_monikers,omitempty"`
	WriteMonikers  []*Moniker `protobuf:"bytes,3,rep,name=write_monikers,json=writeMonikers,proto3" json:"write_monikers,omitempty"`
}

func (x *MonikerList) Reset() {
	*x = MonikerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonikerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonikerList) ProtoMessage() {}

func (x *MonikerList) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonikerList.ProtoReflect.Descriptor instead.
func (*MonikerList) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{5}
}

func (x *MonikerList) GetIsInitialWrite() bool {
	if x != nil {
		return x.IsInitialWrite
	}
	return false
}

func (x *MonikerList) GetReadMonikers() []*Moniker {
	if x != nil {
		return x.ReadMonikers
	}
	return nil
}

func (x *MonikerList) GetWriteMonikers() []*Moniker {
	if x != nil {
		return x.WriteMonikers
	}
	return nil
}

type MonikerValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*any1.Any `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MonikerValues) Reset() {
	*x = MonikerValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonikerValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonikerValues) ProtoMessage() {}

func (x *MonikerValues) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonikerValues.ProtoReflect.Descriptor instead.
func (*MonikerValues) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{6}
}

func (x *MonikerValues) GetValues() []*any1.Any {
	if x != nil {
		return x.Values
	}
	return nil
}

type SidebandWriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cancel bool           `protobuf:"varint,1,opt,name=cancel,proto3" json:"cancel,omitempty"`
	Values *MonikerValues `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *SidebandWriteRequest) Reset() {
	*x = SidebandWriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidebandWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidebandWriteRequest) ProtoMessage() {}

func (x *SidebandWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidebandWriteRequest.ProtoReflect.Descriptor instead.
func (*SidebandWriteRequest) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{7}
}

func (x *SidebandWriteRequest) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

func (x *SidebandWriteRequest) GetValues() *MonikerValues {
	if x != nil {
		return x.Values
	}
	return nil
}

type SidebandReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cancel bool           `protobuf:"varint,1,opt,name=cancel,proto3" json:"cancel,omitempty"`
	Values *MonikerValues `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *SidebandReadResponse) Reset() {
	*x = SidebandReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SidebandReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SidebandReadResponse) ProtoMessage() {}

func (x *SidebandReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SidebandReadResponse.ProtoReflect.Descriptor instead.
func (*SidebandReadResponse) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{8}
}

func (x *SidebandReadResponse) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

func (x *SidebandReadResponse) GetValues() *MonikerValues {
	if x != nil {
		return x.Values
	}
	return nil
}

type StreamWriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamWriteResponse) Reset() {
	*x = StreamWriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_moniker_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWriteResponse) ProtoMessage() {}

func (x *StreamWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_data_moniker_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWriteResponse.ProtoReflect.Descriptor instead.
func (*StreamWriteResponse) Descriptor() ([]byte, []int) {
	return file_data_moniker_proto_rawDescGZIP(), []int{9}
}

var File_data_moniker_proto protoreflect.FileDescriptor

var file_data_moniker_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x21, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x53, 0x69, 0x64,
	0x65, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x08, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x69, 0x6b,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x69, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e,
	0x69, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65,
	0x72, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x22, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x53,
	0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c,
	0x12, 0x2f, 0x0a, 0x13, 0x73, 0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73,
	0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x7a, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x97,
	0x01, 0x0a, 0x13, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f, 0x6e, 0x69, 0x6b,
	0x65, 0x72, 0x73, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x11, 0x4d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x69,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d,
	0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0d,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f,
	0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x52, 0x0c,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x0e,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d,
	0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x52,
	0x0d, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x3d,
	0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x67, 0x0a,
	0x14, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x37, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73,
	0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x14, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x15, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0xbd, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x64, 0x65, 0x62,
	0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x5f, 0x4d, 0x45, 0x4d,
	0x4f, 0x52, 0x59, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f,
	0x42, 0x55, 0x46, 0x46, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x5f,
	0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4f, 0x43, 0x4b,
	0x45, 0x54, 0x53, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4f, 0x43, 0x4b, 0x45, 0x54, 0x53,
	0x5f, 0x4c, 0x4f, 0x57, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x05, 0x12, 0x16,
	0x0a, 0x12, 0x48, 0x59, 0x50, 0x45, 0x52, 0x56, 0x49, 0x53, 0x4f, 0x52, 0x5f, 0x53, 0x4f, 0x43,
	0x4b, 0x45, 0x54, 0x53, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x44, 0x4d, 0x41, 0x10, 0x07,
	0x12, 0x14, 0x0a, 0x10, 0x52, 0x44, 0x4d, 0x41, 0x5f, 0x4c, 0x4f, 0x57, 0x5f, 0x4c, 0x41, 0x54,
	0x45, 0x4e, 0x43, 0x59, 0x10, 0x08, 0x32, 0xb3, 0x03, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x13, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x33, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x73, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4d,
	0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x62, 0x61, 0x6e, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63,
	0x0a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x25, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x1d, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b,
	0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x0b, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x6b, 0x65, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x6e, 0x69, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x6b, 0x65,
	0x72, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x23, 0xaa, 0x02,
	0x20, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x6f, 0x6e, 0x69, 0x6b, 0x65, 0x72,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_moniker_proto_rawDescOnce sync.Once
	file_data_moniker_proto_rawDescData = file_data_moniker_proto_rawDesc
)

func file_data_moniker_proto_rawDescGZIP() []byte {
	file_data_moniker_proto_rawDescOnce.Do(func() {
		file_data_moniker_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_moniker_proto_rawDescData)
	})
	return file_data_moniker_proto_rawDescData
}

var file_data_moniker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_data_moniker_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_data_moniker_proto_goTypes = []interface{}{
	(SidebandStrategy)(0),                      // 0: ni.data_monikers.SidebandStrategy
	(*BeginMonikerSidebandStreamRequest)(nil),  // 1: ni.data_monikers.BeginMonikerSidebandStreamRequest
	(*BeginMonikerSidebandStreamResponse)(nil), // 2: ni.data_monikers.BeginMonikerSidebandStreamResponse
	(*Moniker)(nil),                            // 3: ni.data_monikers.Moniker
	(*MonikerWriteRequest)(nil),                // 4: ni.data_monikers.MonikerWriteRequest
	(*MonikerReadResult)(nil),                  // 5: ni.data_monikers.MonikerReadResult
	(*MonikerList)(nil),                        // 6: ni.data_monikers.MonikerList
	(*MonikerValues)(nil),                      // 7: ni.data_monikers.MonikerValues
	(*SidebandWriteRequest)(nil),               // 8: ni.data_monikers.SidebandWriteRequest
	(*SidebandReadResponse)(nil),               // 9: ni.data_monikers.SidebandReadResponse
	(*StreamWriteResponse)(nil),                // 10: ni.data_monikers.StreamWriteResponse
	(*any1.Any)(nil),                           // 11: google.protobuf.Any
}
var file_data_moniker_proto_depIdxs = []int32{
	0,  // 0: ni.data_monikers.BeginMonikerSidebandStreamRequest.strategy:type_name -> ni.data_monikers.SidebandStrategy
	6,  // 1: ni.data_monikers.BeginMonikerSidebandStreamRequest.monikers:type_name -> ni.data_monikers.MonikerList
	0,  // 2: ni.data_monikers.BeginMonikerSidebandStreamResponse.strategy:type_name -> ni.data_monikers.SidebandStrategy
	6,  // 3: ni.data_monikers.MonikerWriteRequest.monikers:type_name -> ni.data_monikers.MonikerList
	7,  // 4: ni.data_monikers.MonikerWriteRequest.data:type_name -> ni.data_monikers.MonikerValues
	7,  // 5: ni.data_monikers.MonikerReadResult.data:type_name -> ni.data_monikers.MonikerValues
	3,  // 6: ni.data_monikers.MonikerList.read_monikers:type_name -> ni.data_monikers.Moniker
	3,  // 7: ni.data_monikers.MonikerList.write_monikers:type_name -> ni.data_monikers.Moniker
	11, // 8: ni.data_monikers.MonikerValues.values:type_name -> google.protobuf.Any
	7,  // 9: ni.data_monikers.SidebandWriteRequest.values:type_name -> ni.data_monikers.MonikerValues
	7,  // 10: ni.data_monikers.SidebandReadResponse.values:type_name -> ni.data_monikers.MonikerValues
	1,  // 11: ni.data_monikers.MonikerService.BeginSidebandStream:input_type -> ni.data_monikers.BeginMonikerSidebandStreamRequest
	4,  // 12: ni.data_monikers.MonikerService.StreamReadWrite:input_type -> ni.data_monikers.MonikerWriteRequest
	6,  // 13: ni.data_monikers.MonikerService.StreamRead:input_type -> ni.data_monikers.MonikerList
	4,  // 14: ni.data_monikers.MonikerService.StreamWrite:input_type -> ni.data_monikers.MonikerWriteRequest
	2,  // 15: ni.data_monikers.MonikerService.BeginSidebandStream:output_type -> ni.data_monikers.BeginMonikerSidebandStreamResponse
	5,  // 16: ni.data_monikers.MonikerService.StreamReadWrite:output_type -> ni.data_monikers.MonikerReadResult
	5,  // 17: ni.data_monikers.MonikerService.StreamRead:output_type -> ni.data_monikers.MonikerReadResult
	10, // 18: ni.data_monikers.MonikerService.StreamWrite:output_type -> ni.data_monikers.StreamWriteResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_data_moniker_proto_init() }
func file_data_moniker_proto_init() {
	if File_data_moniker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_moniker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginMonikerSidebandStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginMonikerSidebandStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Moniker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonikerWriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonikerReadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonikerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonikerValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidebandWriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SidebandReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_moniker_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamWriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_moniker_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*MonikerWriteRequest_Monikers)(nil),
		(*MonikerWriteRequest_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_moniker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_data_moniker_proto_goTypes,
		DependencyIndexes: file_data_moniker_proto_depIdxs,
		EnumInfos:         file_data_moniker_proto_enumTypes,
		MessageInfos:      file_data_moniker_proto_msgTypes,
	}.Build()
	File_data_moniker_proto = out.File
	file_data_moniker_proto_rawDesc = nil
	file_data_moniker_proto_goTypes = nil
	file_data_moniker_proto_depIdxs = nil
}
